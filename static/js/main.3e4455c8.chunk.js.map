{"version":3,"sources":["PageHeader.js","PageFooter.js","data.js","Project.js","PageContent.js","SelectedProject.js","App.js","serviceWorker.js","index.js"],"names":["PageHeader","className","PageFooter","data","title","image","desc","Project","props","src","process","width","height","to","link","PageContent","map","place","i","key","SelectedProject","index","useParams","alt","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6VAaeA,MAVf,WACI,OACI,yBAAKC,UAAU,cACX,gCACI,sD,MCMDC,MAVf,WACI,OACI,yBAAKD,UAAU,cACX,gCACI,8DC2CCE,EAlDJ,CACT,CACEC,MAAO,QACPC,MAAO,oBACPC,KAAK,ygBAQP,CACEF,MAAO,QACPC,MAAO,oBACPC,KAAK,ycAOP,CACEF,MAAO,QACPC,MAAO,oBACPC,KAAK,yXAMP,CACEF,MAAO,QACPC,MAAO,oBACPC,KAAK,ihBAOP,CACEF,MAAO,UACPC,MAAO,sBACPC,KAAK,oT,aC9BIC,MAVf,SAAiBC,GACb,OACI,yBAAKP,UAAU,WACX,yBAAKQ,IAAG,UAAKC,YAAL,OAA8BF,EAAMH,OAASM,MAAM,MAAMC,OAAO,SACxE,4BAAKJ,EAAMJ,OACX,kBAAC,IAAD,CAAMS,GAAIL,EAAMM,MAAhB,SAA6BN,EAAMJ,S,MCiBhCW,MArBf,WACI,OACI,yBAAKd,UAAU,cACX,yBAAKA,UAAU,WAEXE,EAAKa,KAAI,SAACC,EAAOC,GACb,OACI,kBAAC,EAAD,CACIC,IAAG,UAAKD,EAAL,YAAUD,EAAMZ,OACnBD,MAAOa,EAAMb,MACbC,MAAOY,EAAMZ,MACbS,KAAI,UAAKI,W,aCMtBE,MAhBf,SAAyBZ,GAAQ,IACrBa,EAAUC,cAAVD,MACFJ,EAAQd,EAAKkB,GAEnB,OACI,yBAAKpB,UAAU,oBACX,yBAAKA,UAAU,SACX,yBAAKsB,IAAI,GAAGd,IAAKQ,EAAMZ,MAAOM,MAAM,OAAOC,OAAO,SAEtD,4BAAKK,EAAMb,OACX,2BAAIa,EAAMX,MACV,kBAAC,IAAD,CAAMO,GAAG,KAAT,kBCKGW,MAbf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKvB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,UAAUC,UAAWP,IACvC,kBAAC,EAAD,SCJYQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3e4455c8.chunk.js","sourcesContent":["import React from 'react'\nimport './PageHeader.css'\n\nfunction PageHeader() {\n    return (\n        <div className=\"PageHeader\">\n            <header>\n                <h1>Dogs of Make School</h1>\n            </header>\n        </div>\n    )\n}\n\nexport default PageHeader","import React from 'react'\nimport './PageFooter.css'\n\nfunction PageFooter() {\n    return (\n        <div className=\"PageFooter\">\n            <footer>\n                <h5>Ariane Evans copyright 2020</h5>\n            </footer>\n        </div>\n    )\n}\n\nexport default PageFooter","const data = [\n    {\n      title: 'Kevin',\n      image: '/images/Kevin.jpg',\n      desc: `Kevin is a very cute Shiba Inu, but he is also very nervous. If \n      you have the luck of him looking at you and not running away, you are \n      very lucky. If you have been blessed with the opportunity to pet Kevin, \n      you will have good luck for the rest of your life. This being said, Kevin \n      would like you to please respect his boundries. You cannot try to force \n      his love, that will bring about the opposite of a blessing, it will bring\n      a curse. The curse of the Shiba Inus' wrath!`,\n    },\n    {\n      title: 'Sugar',\n      image: '/images/Sugar.png',\n      desc: `Sugar is the sweetest little dog at Make School. Even if she sometimes\n      rocks the most fashionable of outfits, she never lets it get to her head.\n      She is always accepting and ready for your love! She will go around the \n      entirety of the school in search of someone who will give her some pets.\n      Her love and looks aren't the only thing she has though, she is also doing\n      agility training! Here's to being the whole package!`,\n    },\n    {\n      title: 'Tahoe',\n      image: '/images/Tahoe.jpg',\n      desc: `Tahoe is the goodest boy in all of the West! He is a hard working pupper\n      who takes amazing care of his mom. You might see him following his mom, running \n      up to people for love, or being lost from having run up to people for love and then\n      no longer being able to find his mom. He enjoys a good pupacino and would like you\n      to know that he is baby.`,\n    },\n    {\n      title: 'Ducky',\n      image: '/images/Ducky.jpg',\n      desc: `Ducky is the unofficial Make School mascot and does an amazing job at that. \n      She loves to run around you while chasing after her pink Kong, but unless she knows\n      you, she will not pay attention to you and thats ok! If that's the case, it might be\n      nice for you to try to become friends with Ducky by bribing her with treats. If she\n      still doesn't like you, thats still ok. It takes time and trust, so don't force your \n      love on her! It may take time to become her friend, but it'll be worth it.`,\n    },\n    {\n      title: 'Cricket',\n      image: '/images/Cricket.jpg',\n      desc: `Cricket is the mysterious new member of Make School's dogs. Although we may not \n      know much about this tiny little teddy bear yet, we do know that she has already \n      integrated the inner MS dogs circle as one of Ducky's friends. We look forward to \n      learning more about this new member!`,\n    },\n  ]\n  export default data","import { Link } from 'react-router-dom'\nimport React from 'react'\nimport './Project.css'\n\nfunction Project(props) {\n    return (\n        <div className=\"Project\">\n            <img src={`${process.env.PUBLIC_URL}${props.image}`} width=\"300\" height=\"auto\" />\n            <h3>{props.title}</h3>\n            <Link to={props.link}>About {props.title}</Link>\n        </div>            \n    )\n}\n\nexport default Project","import data from './data'\nimport React from 'react'\nimport Project from './Project'\nimport './PageContent.css'\n\nfunction PageContent() {\n    return (\n        <div className=\"PageHeader\">\n            <div className=\"project\">\n                {\n                data.map((place, i) => {\n                    return (\n                        <Project\n                            key={`${i}-${place.image}`}\n                            title={place.title}\n                            image={place.image}\n                            link={`${i}`}\n                        />\n                    )\n                })\n                }\n            </div>       \n        </div>\n    )\n}\n\nexport default PageContent","import React from 'react'\nimport {Link, useParams} from 'react-router-dom'\nimport data from './data'\nimport './SelectedProject.css'\n\n\nfunction SelectedProject(props) {\n    const { index } = useParams()\n    const place = data[index]\n\n    return (\n        <div className='Selected-Project'>\n            <div className=\"image\">\n                <img alt=\"\" src={place.image} width=\"auto\" height=\"400\" /> \n            </div>\n            <h3>{place.title}</h3>\n            <p>{place.desc}</p>\n            <Link to='/'>Back to Home</Link>\n        </div>\n    )\n}\n\nexport default SelectedProject","import React from 'react';\nimport './App.css';\nimport PageHeader from './PageHeader'\nimport PageFooter from './PageFooter';\nimport PageContent from './PageContent'\nimport SelectedProject from './SelectedProject'\nimport data from './data'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <PageHeader />\n        <Route exact path='/' component={PageContent} />\n        <Route exact path='/:index' component={SelectedProject} />\n        <PageFooter />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}